<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown 如何快速上手</title>
    <url>/2020/11/15/2020-11-15-Markdown%20%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</url>
    <content><![CDATA[<h1 id="如何快速上手Markdown"><a href="#如何快速上手Markdown" class="headerlink" title="如何快速上手Markdown"></a>如何快速上手Markdown</h1><h6 id="tags-markdown筆記"><a href="#tags-markdown筆記" class="headerlink" title="tags: markdown筆記"></a>tags: <code>markdown筆記</code></h6><h3 id="1-Markdown-動機"><a href="#1-Markdown-動機" class="headerlink" title="1. Markdown 動機"></a>1. Markdown 動機</h3><blockquote>
<p><strong>Markdown是一種輕量級標記語言</strong>，創始人為 John Gruber。它允許人們「使用易讀易寫的純文本格式編寫文檔，然後轉換成有效的 XHTML 或者 HTML文檔」。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。</p>
</blockquote>
<p>2019年從工程師自學文章認識到Markdown，發現介面與coding有點像，覺得很酷 XD<br>現在決定將Markdown使用方法記錄下來，將自己筆記用md記錄，文章留給自己查閱~與大家一起參考使用 :heart: </p>
<h3 id="2-Mardown-常用快捷鍵"><a href="#2-Mardown-常用快捷鍵" class="headerlink" title="2. Mardown 常用快捷鍵"></a>2. Mardown 常用快捷鍵</h3><ul>
<li><p><strong>Highlight 畫重點</strong></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">method:   &#x3D;&#x3D; Highlight &#x3D;&#x3D;  </span><br></pre></td></tr></table></figure></li>
<li><p><strong>標題 h1~h6</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># h1大標</span><br><span class="line">## h2 中標</span><br></pre></td></tr></table></figure></li>
<li><p><strong>清單 無序-星號 / 有序 - 數字</strong></p>
</li>
<li><p>List     </p>
<ul>
<li>List      <ul>
<li>List</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*  List         </span><br><span class="line">(空格*2) *List</span><br><span class="line">(空格*4) * List</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>程式碼區塊</strong><ul>
<li> 程式碼 <code>Code</code> (`中間包文字ˋ)</li>
<li> 程式碼區塊 (3個`換行，中間包文字)</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96; code &#96;</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line">Block  </span><br><span class="line">&#96;&#96;&#96; </span><br></pre></td></tr></table></figure>

<ul>
<li><strong>強調語法</strong></li>
<li>斜體 <em>Italic</em> &nbsp;&nbsp; <code>*Italic*</code></li>
<li>粗體 <strong>Bold</strong> &nbsp;&nbsp; <code>**Bold**</code></li>
<li>刪除線 <del>Done</del> &nbsp;&nbsp; <code>~~Done~~</code></li>
<li>劃重點  &nbsp;&nbsp;<code>==Highlight==</code></li>
</ul>
<h3 id="3-補充說明"><a href="#3-補充說明" class="headerlink" title="3. 補充說明"></a>3. 補充說明</h3><ul>
<li>表格</li>
</ul>
<table>
<thead>
<tr>
<th>輸入</th>
<th>建立新表格<code>(鍵盤按下 shift + \)</code></th>
</tr>
</thead>
</table>
<ul>
<li><a href="https://gretema.github.io/hexo/20191217/2656253328/">Hexo Next 嵌入codepen方式</a></li>
</ul>
<table>
<thead>
<tr>
<th>hexo iframe</th>
<th>在文章中插入 iframe <code>&#123;% iframe url [width] [height] %&#125;</code></th>
</tr>
</thead>
<tbody><tr>
<td>Codepen</td>
<td>Embed copy <code>&lt;iframe&gt; 的 src 值取出來，放到 iframe 語法的 url 位置， [width] 跟 [height] 都去掉。</code></td>
</tr>
</tbody></table>
<iframe src="https://codepen.io/hui190822/embed/jOroQqp?height=95&theme-id=dark&default-tab=css,result" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe>

<p><strong>參考來源</strong></p>
<ul>
<li><a href="https://medium.com/vhs-design-vitamin-for-creative-mind/markdown-67b0706e6005#aace">https://medium.com/vhs-design-vitamin-for-creative-mind/markdown-67b0706e6005#aace</a></li>
<li><a href="https://hexo.io/zh-tw/docs/tag-plugins">https://hexo.io/zh-tw/docs/tag-plugins</a></li>
</ul>
]]></content>
      <categories>
        <category>工具學習</category>
      </categories>
      <tags>
        <tag>Markdown 筆記</tag>
      </tags>
  </entry>
  <entry>
    <title>Huli-s-Course-2-神奇的-CSS-transition</title>
    <url>/2020/11/25/Huli-s-Course-2-%E7%A5%9E%E5%A5%87%E7%9A%84-CSS-transition/</url>
    <content><![CDATA[<h1 id="HW2-神奇的-CSS-transition"><a href="#HW2-神奇的-CSS-transition" class="headerlink" title="HW2-神奇的 CSS transition"></a>HW2-神奇的 CSS transition</h1><h6 id="tags-前端"><a href="#tags-前端" class="headerlink" title="tags: 前端"></a>tags: <code>前端</code></h6><p>示意圖：</p>
<p><img src="https://i.imgur.com/PNw3t8B.gif"></p>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><a href="https://hui190822.github.io/frontend-intermediate-course/answers/hw2/index.html">https://hui190822.github.io/frontend-intermediate-course/answers/hw2/index.html</a></p>
<h2 id="作業方法"><a href="#作業方法" class="headerlink" title="作業方法"></a>作業方法</h2><h3 id="1-filter"><a href="#1-filter" class="headerlink" title="1. filter"></a>1. filter</h3><table>
<thead>
<tr>
<th>filter</th>
<th>類似像ps的濾鏡效果，可使用filter屬性對網頁進行效果渲染。</th>
</tr>
</thead>
<tbody><tr>
<td>使用方式</td>
<td><code>div&#123; -webkit-filter: blur(3px) opacity(0.5);&#125;</code> 使用不同效果</td>
</tr>
</tbody></table>
<ul>
<li><strong>CSS Filters濾鏡效果共有十種特效，分別是：</strong><br>opacity 不透明<br>brightness 亮度<br>contrast 對比<br>blur 模糊<br>drop-shadow 下拉陰影<br>grayscale 灰階<br>sepia 懷舊<br>saturate 飽和<br>hue-rotate 色相旋轉<br>invert 負片</li>
</ul>
<ul>
<li>instagram.css: <a href="https://github.com/picturepan2/instagram.css">https://github.com/picturepan2/instagram.css</a></li>
</ul>
<h3 id="2-transition"><a href="#2-transition" class="headerlink" title="2. transition"></a>2. transition</h3><table>
<thead>
<tr>
<th>transition</th>
<th>轉場效果，讓網頁可以做動畫變化</th>
</tr>
</thead>
<tbody><tr>
<td>使用方式</td>
<td><code>transition: color 1s, box-shadow 2s;</code> 使用不同效果</td>
</tr>
<tr>
<td><code>transition-property</code></td>
<td>定義哪些 CSS properties 會被轉場效果影響</td>
</tr>
<tr>
<td><code>transition-duration</code></td>
<td>定義轉場所花費的時間</td>
</tr>
<tr>
<td><code>transition-timing-function</code></td>
<td>用來定義轉場發生的時間曲線</td>
</tr>
<tr>
<td><code>transition-delay</code></td>
<td>定義多久之後開始發生轉場</td>
</tr>
</tbody></table>
<ul>
<li>transition-timing-function: <a href="https://cubic-bezier.com/#.17,.67,.83,.67">https://cubic-bezier.com/#.17,.67,.83,.67</a></li>
<li><code>transition-delay: 1s</code> 會延遲1s開始動畫 &amp; 離開1s後結束動畫</li>
</ul>
<h2 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h2><ul>
<li><a href="https://css-tricks.com/almanac/properties/f/filter/">fiter</a></li>
<li><a href="http://blog.shihshih.com/css-filter/">filter效果</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance/rendering/">Web Fundamentals: Rendering performance</a></li>
</ul>
]]></content>
      <categories>
        <category>前端課程</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>transition</tag>
      </tags>
  </entry>
  <entry>
    <title>2020-11-24-Huli&#39;s Course#1｜基本 HTML/CSS練習.md</title>
    <url>/2020/11/24/2020-11-24-Huli-s-Course-1%EF%BD%9C%E5%9F%BA%E6%9C%AC-HTML-CSS%E7%B7%B4%E7%BF%92/</url>
    <content><![CDATA[<h1 id="HW1-基本-HTML-CSS-練習：以-Twitch-為例"><a href="#HW1-基本-HTML-CSS-練習：以-Twitch-為例" class="headerlink" title="HW1 - 基本 HTML/CSS 練習：以 Twitch 為例"></a>HW1 - 基本 HTML/CSS 練習：以 Twitch 為例</h1><h6 id="tags-前端"><a href="#tags-前端" class="headerlink" title="tags: 前端"></a>tags: <code>前端</code></h6><p>示意圖：<br><img src="https://i.imgur.com/nhfV86M.gif"></p>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><a href="https://hui190822.github.io/frontend-intermediate-course/answers/hw1/index.html">https://hui190822.github.io/frontend-intermediate-course/answers/hw1/index.html</a></p>
<h2 id="Git-Fork專案"><a href="#Git-Fork專案" class="headerlink" title="Git Fork專案"></a>Git Fork專案</h2><ol>
<li><a href="https://gitbook.tw/chapters/github/pull-request.html">Fork Open Source</a></li>
<li><a href="https://gitbook.tw/chapters/branch/using-branch.html">Git分支</a></li>
</ol>
<h2 id="作業方法"><a href="#作業方法" class="headerlink" title="作業方法"></a>作業方法</h2><h3 id="1-如何幫背景圖片加上一層半透明顏色的遮罩"><a href="#1-如何幫背景圖片加上一層半透明顏色的遮罩" class="headerlink" title="1. 如何幫背景圖片加上一層半透明顏色的遮罩 ?"></a>1. 如何幫背景圖片加上一層半透明顏色的遮罩 ?</h3><ul>
<li><a href="https://medium.com/@stephenlai2017/css-%E5%B9%AB%E8%83%8C%E6%99%AF%E5%9C%96%E5%8A%A0%E4%B8%8A%E4%B8%80%E5%B1%A4%E5%8D%8A%E9%80%8F%E6%98%8E%E9%A1%8F%E8%89%B2%E7%9A%84%E9%81%AE%E7%BD%A9-fa89c2fd6f07">CSS:幫背景圖加上一層半透明顏色的遮罩</a></li>
<li>background-blend-mode: 背景圖片的混合模式<br>為CSS 屬性是針對背景圖片進行 (類似ps圖層混合模式效果)</li>
<li>mix-blend-mode: 圖層混合模式<br>demo: <a href="http://wcc723.github.io/WorkShop-gh-pages/cssBlendMode/">http://wcc723.github.io/WorkShop-gh-pages/cssBlendMode/</a></li>
<li>linear-gradient<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用 background-blend-mode</span><br><span class="line">background-color: rgba(0, 0, 0, .5);</span><br><span class="line">background-image: url(..&#x2F;img&#x2F;bg-default.jpg);</span><br><span class="line">background-blend-mode: multiply;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 使用 linear-gradient</span><br><span class="line">background-image: linear-gradient(rgba(0,0,0,0.5),rgba(0,0,0,0.7)), url(..&#x2F;img&#x2F;bg-default.jpg); </span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="2-flex排版置中方式"><a href="#2-flex排版置中方式" class="headerlink" title="2. flex排版置中方式"></a>2. flex排版置中方式</h3><ul>
<li>需在多了解flex排版</li>
<li>垂直置中方式: <a href="https://ithelp.ithome.com.tw/users/20112550/ironman/2092">https://ithelp.ithome.com.tw/users/20112550/ironman/2092</a></li>
<li><img src="https://i.imgur.com/ZvUbeNI.png"></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">display: flex;</span><br><span class="line">justify-content: center;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="自我練習"><a href="#自我練習" class="headerlink" title="自我練習"></a>自我練習</h2><h3 id="1-請問-CSS-的屬性position有哪幾種值？"><a href="#1-請問-CSS-的屬性position有哪幾種值？" class="headerlink" title="1. 請問 CSS 的屬性position有哪幾種值？"></a>1. 請問 CSS 的屬性position有哪幾種值？</h3><ul>
<li>static /absolute /relative /fixed/</li>
</ul>
<h3 id="2-承上，請問那幾種值有哪些區別？請講出適合應用的地方。"><a href="#2-承上，請問那幾種值有哪些區別？請講出適合應用的地方。" class="headerlink" title="2. 承上，請問那幾種值有哪些區別？請講出適合應用的地方。"></a>2. 承上，請問那幾種值有哪些區別？請講出適合應用的地方。</h3><ul>
<li>position: relative 相對定位</li>
<li>position: absolute 絕對定位 (搭配相對定位父層)<br>  與搭配top/bottom/left/right屬性做位置變化</li>
<li>position: fixed 的元素會相對於瀏覽器視窗來定位</li>
</ul>
<h3 id="3-display的三個值inline-block-inline-block有什麼異同？可以試著舉出幾個例子嗎？"><a href="#3-display的三個值inline-block-inline-block有什麼異同？可以試著舉出幾個例子嗎？" class="headerlink" title="3. display的三個值inline, block, inline-block有什麼異同？可以試著舉出幾個例子嗎？"></a>3. display的三個值inline, block, inline-block有什麼異同？可以試著舉出幾個例子嗎？</h3><ul>
<li>display: inline為行內元素，不能設置寬高大小</li>
<li>display: block為區塊元素，佔內容一行，可設置寬高</li>
<li>display: inline-block為行內但有區塊形式，可設置寬高</li>
</ul>
<h3 id="4-有哪些-HTML-元素是-inline-哪些是-block？"><a href="#4-有哪些-HTML-元素是-inline-哪些是-block？" class="headerlink" title="4. 有哪些 HTML 元素是 inline, 哪些是 block？"></a>4. 有哪些 HTML 元素是 inline, 哪些是 block？</h3><ul>
<li>每個HTML元素分為inline與block兩種屬性</li>
<li>inline : span, img, a</li>
<li>block : div, h1-h6, figure, p</li>
</ul>
<h3 id="5-當我設定一個元素的width為300px，並且padding設成10px之後，這個元素的寬度應該會是多少？"><a href="#5-當我設定一個元素的width為300px，並且padding設成10px之後，這個元素的寬度應該會是多少？" class="headerlink" title="5. 當我設定一個元素的width為300px，並且padding設成10px之後，這個元素的寬度應該會是多少？"></a>5. 當我設定一個元素的width為300px，並且padding設成10px之後，這個元素的寬度應該會是多少？</h3><ul>
<li>元素width為320px (300+20px推內距)</li>
<li>若有 <code>box-sizing: border-box;</code> 盒模型為300px</li>
</ul>
<h3 id="6-這次實作的畫面當頻道名稱字太多的時候，會超出一格的大小或者會直接被卡掉，有沒有辦法讓字太多的時候在尾巴顯示…？例如原本名稱叫做：「1234567」，顯示的時候變成：「12345…」？"><a href="#6-這次實作的畫面當頻道名稱字太多的時候，會超出一格的大小或者會直接被卡掉，有沒有辦法讓字太多的時候在尾巴顯示…？例如原本名稱叫做：「1234567」，顯示的時候變成：「12345…」？" class="headerlink" title="6. 這次實作的畫面當頻道名稱字太多的時候，會超出一格的大小或者會直接被卡掉，有沒有辦法讓字太多的時候在尾巴顯示…？例如原本名稱叫做：「1234567」，顯示的時候變成：「12345…」？"></a>6. 這次實作的畫面當頻道名稱字太多的時候，會超出一格的大小或者會直接被卡掉，有沒有辦法讓字太多的時候在尾巴顯示…？例如原本名稱叫做：「1234567」，顯示的時候變成：「12345…」？</h3><ul>
<li>讓多行文字超出時自動隱藏，並出現…</li>
<li> text-overflow: ellipsis</li>
<li>codepen: <iframe src="https://codepen.io/hui190822/embed/jOroQqp?height=95&theme-id=dark&default-tab=css,result" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe> 

</li>
</ul>
<h2 id="參考來源"><a href="#參考來源" class="headerlink" title="參考來源"></a>參考來源</h2><ol>
<li><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">A Complete Guide to Flexbox</a></li>
<li><a href="https://zh-tw.learnlayout.com/flexbox.html">學習 CSS 版面配置: flexbox</a></li>
<li><a href="https://www.oxxostudio.tw/articles/201501/css-flexbox.html">深入解析 CSS Flexbox</a></li>
</ol>
]]></content>
      <categories>
        <category>前端課程</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Huli&#39;s-Course-3- 寫 CSS 必備神器：CSS 預處理器</title>
    <url>/2020/12/02/Huli-s-Course-3-%E5%AF%AB-CSS-%E5%BF%85%E5%82%99%E7%A5%9E%E5%99%A8%EF%BC%9ACSS-%E9%A0%90%E8%99%95%E7%90%86%E5%99%A8/</url>
    <content><![CDATA[<h1 id="HW3-寫-CSS-必備神器：CSS-預處理器"><a href="#HW3-寫-CSS-必備神器：CSS-預處理器" class="headerlink" title="HW3- 寫 CSS 必備神器：CSS 預處理器"></a>HW3- 寫 CSS 必備神器：CSS 預處理器</h1><h6 id="tags-前端"><a href="#tags-前端" class="headerlink" title="tags: 前端"></a>tags: <code>前端</code></h6><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><a href="https://hui190822.github.io/frontend-intermediate-course/answers/hw3/index.html">https://hui190822.github.io/frontend-intermediate-course/answers/hw3/index.html</a></p>
<blockquote>
<h2 id="我們為什麼要認識CSS-preprocessor預處理器呢"><a href="#我們為什麼要認識CSS-preprocessor預處理器呢" class="headerlink" title="我們為什麼要認識CSS preprocessor預處理器呢 ?"></a>我們為什麼要認識CSS preprocessor預處理器呢 ?</h2></blockquote>
<h3 id="1-傳統CSS"><a href="#1-傳統CSS" class="headerlink" title="1. 傳統CSS"></a>1. 傳統CSS</h3><ul>
<li>由於傳統CSS沒有變數與可重複使用樣式的寫法，使得邏輯上相近的樣式設定常需要重複撰寫，導致維護性較差。</li>
<li>在模組化開發時，不能採用嵌套（nested）的寫法，導致需要寫很多重複的選擇器。<h3 id="2-CSS預處理器"><a href="#2-CSS預處理器" class="headerlink" title="2. CSS預處理器"></a>2. CSS預處理器</h3></li>
</ul>
<p>若是能讓 CSS 像一般程式語言一樣，出現巢狀、變數、函式、迴圈等功能提前設置，讓你不怕業主總想從顏色A-&gt; B-&gt; C都修改看看，然後再回去A的選項 QQ</p>
<ul>
<li>主流的 CSS 預處理器有三種 : Sass/SCSS、Less、Stylus</li>
<li>CSS 預處理器相對於CSS算是較高階的語法，需經過編譯成 CSS，瀏覽器才看得懂</li>
<li>功能 : 變數 ( Variable )、繼承 ( Extend )、函式 ( Function )、混用 ( Mixin )</li>
</ul>
<blockquote>
<h2 id="介紹SASS-SCSS"><a href="#介紹SASS-SCSS" class="headerlink" title="介紹SASS/SCSS"></a>介紹SASS/SCSS</h2></blockquote>
<ol>
<li>SASS 與 SCSS差別<br>Sass 與 Scss 的差別僅在於有無使用 { } 包覆程式碼</li>
</ol>
<p>Scss：使用{ }表達階層關係</p>
<figure class="highlight plain"><figcaption><span>SCSS</span></figcaption><table><tr><td class="code"><pre><span class="line">nav &#123;</span><br><span class="line">  ul &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">    list-style: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Sass：使用縮排方式表達階層關係</p>
<figure class="highlight plain"><figcaption><span>SASS</span></figcaption><table><tr><td class="code"><pre><span class="line">nav</span><br><span class="line">  ul</span><br><span class="line">    margin: 0</span><br><span class="line">    padding: 0</span><br><span class="line">    list-style: none</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>建置環境</li>
</ol>
<ul>
<li>環境: Node.js</li>
<li>軟體: Vs code</li>
<li>外掛: Live Sass Compiler<ul>
<li><a href="https://github.com/ritwickdey/vscode-live-sass-compiler/blob/master/docs/settings.md">Live Sass Compiler設置參考</a></li>
</ul>
</li>
</ul>
<h3 id="變數-Variable"><a href="#變數-Variable" class="headerlink" title="變數 (Variable) $"></a>變數 (Variable) $</h3><p>用 $ 符號宣告變數，常用在設定顏色，字型大小等，變數編譯後不會輸出在css 檔案中。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 變數</span><br><span class="line">$bg-color: rgba(0, 0, 0, 0.6);</span><br><span class="line">$container-width: 300px;</span><br><span class="line">$font-color: rgb(255, 255, 255);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;style.scss</span><br><span class="line">.container&#123;</span><br><span class="line">    background-color: $bg-color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;style.css</span><br><span class="line">.container &#123;</span><br><span class="line">  background-color: rgba(0, 0, 0, 0.6);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="繼承-Extend-extend"><a href="#繼承-Extend-extend" class="headerlink" title="繼承 (Extend) @extend"></a>繼承 (Extend) @extend</h3><p>如果有很多 css 樣式需要重複使用，這邊就可以用繼承，將固定要寫的樣式集中在一起，日後需要使用可以用語法乎叫。</p>
<ul>
<li>% : 專門被繼承的樣式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%aButton &#123;</span><br><span class="line">  display:block;</span><br><span class="line">  text-decoration:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a &#123;</span><br><span class="line"> @extend %aButton;</span><br><span class="line"> &#x2F;*透過上面的@extend 直接呼叫使用已經寫好的樣式，接下來可以自定義按鈕其他的樣式*&#x2F;</span><br><span class="line"> width:100%;</span><br><span class="line"> height:20px;</span><br><span class="line"> line-height:20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="函式-Function-function"><a href="#函式-Function-function" class="headerlink" title="函式 (Function) @function"></a>函式 (Function) @function</h3><p>自訂函式，可以帶變數做簡易計算變化</p>
<ul>
<li>假設運用不同字級<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$baseSize: 12px;</span><br><span class="line"></span><br><span class="line">&#x2F;*寫一個函數去定義每一種類別的字，它的大小 *&#x2F;</span><br><span class="line"></span><br><span class="line">@function font($level: 1) &#123;</span><br><span class="line">  @return $baseSize *$level; &#x2F;&#x2F; 預設12px</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;*套用函數 font()*&#x2F;</span><br><span class="line"></span><br><span class="line">.Title &#123;</span><br><span class="line"> font-size:font(6); &#x2F;&#x2F; 72px &#x3D; 12px * 6</span><br><span class="line"> font-family: Roboto-Black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Title2 &#123;</span><br><span class="line"> font-size:font(4); &#x2F;&#x2F; 48px &#x3D; 12px * 4</span><br><span class="line"> font-family: Roboto-Black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.Paragraph &#123;</span><br><span class="line"> font-size:font(1.3); &#x2F;&#x2F; 15.6px &#x3D; 12px * 1.3</span><br><span class="line"> font-family: Roboto-Black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="混用-Mixin-mixin"><a href="#混用-Mixin-mixin" class="headerlink" title="混用 (Mixin) @mixin"></a>混用 (Mixin) @mixin</h3><p>需搭配 @include 使用，產出多組樣式，達到客製化效果</p>
<p>注意: Mixin 跟 extend 最大的不同 →<br>Mixin 是產生多個樣式；extend 是將樣式全部集中管理。</p>
<ul>
<li> 下列為Alex大大提供的字級樣式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$baseSize:14px;</span><br><span class="line">$sizeLevel:2px;</span><br><span class="line"></span><br><span class="line">@function font($level: 0) &#123;</span><br><span class="line">  @if $level &lt; 0 &#123;</span><br><span class="line">    $level:0 </span><br><span class="line">  &#125;</span><br><span class="line">  @return $baseSize + $sizeLevel * round($level);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@function rhythm($size) &#123;</span><br><span class="line">  @return ceil($size * $paddingLevel &#x2F; $baseLineSize) * $baseLineSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@mixin font($level: 1, $line-height: auto) &#123;</span><br><span class="line">  $size: font($level);</span><br><span class="line">  $line: rhythm($size);</span><br><span class="line"></span><br><span class="line">  font-size: $size;</span><br><span class="line">  @if $line-height &#x3D;&#x3D; auto or $line-height &lt; $line &#123;</span><br><span class="line">    line-height: $line;</span><br><span class="line">  &#125; @else &#123;</span><br><span class="line">    line-height: $line-height;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.aaa &#123;</span><br><span class="line">  @include font(2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.bbb &#123;</span><br><span class="line">  @include font(4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ccc &#123;</span><br><span class="line">  @include font(2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;* 產生出來的 CSS *&#x2F;</span><br><span class="line"></span><br><span class="line">.aaa &#123;</span><br><span class="line">  font-size:20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.bbb &#123;</span><br><span class="line">   font-size:28px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ccc &#123;</span><br><span class="line">  font-size:16px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="補充說明"><a href="#補充說明" class="headerlink" title="補充說明"></a>補充說明</h3><ol>
<li>在scss的註解<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 不會被轉譯css</span><br><span class="line">&#x2F;* 會被轉譯css</span><br></pre></td></tr></table></figure></li>
<li>使用scss，建立分區概念</li>
</ol>
<ul>
<li>scss 工作區 (建議注解在這，從工作區修改)</li>
<li>style 測試區 (dev)</li>
<li>dist 上線區 (壓縮檔案)<br><img src="https://i.imgur.com/JTr08HQ.png"></li>
</ul>
<ol start="3">
<li>匯入 (Import) @import</li>
</ol>
<table>
<thead>
<tr>
<th>匯入其他 scss 的檔案</th>
<th>使用 @import</th>
</tr>
</thead>
<tbody><tr>
<td>撰寫 scss 時，通常會模組化管理非常多的檔案，統一匯入最終的scss，再編譯成 css</td>
<td>檔名前面會加一個下底線( _ )，e.g. _reset.scss 讓編譯工具不直接編譯成CSS</td>
</tr>
</tbody></table>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &quot;reset&quot;; &#x2F;&#x2F; 重設css</span><br><span class="line">@import &quot;variables&quot;; &#x2F;&#x2F; 所有變數都存放於此</span><br><span class="line">@import &quot;mixins&quot;; &#x2F;&#x2F; 所有mixin相關的scss</span><br></pre></td></tr></table></figure>

<h3 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h3><ul>
<li><a href="https://www.youtube.com/watch?v=mzuKtTuimEE">從 CSS 到 SASS (SCSS) 超入門觀念引導</a></li>
<li><a href="https://blog.techbridge.cc/2017/06/30/sass-scss-tutorial-introduction/">Sass/SCSS 簡明入門教學</a></li>
<li><a href="https://sass-lang.com/">SASS</a></li>
</ul>
]]></content>
      <categories>
        <category>前端課程</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>CSS</tag>
        <tag>SCSS</tag>
      </tags>
  </entry>
</search>
